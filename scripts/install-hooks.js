/**
 * Script para instalar hooks Git no projeto
 * Executado via: npm run install-hooks
 */

const fs = require("fs");
const path = require("path");
const { execSync } = require("child_process");

// Caminho para o diret√≥rio .git/hooks
const getGitHooksPath = () => {
  try {
    // Obter o caminho para o diret√≥rio .git
    const gitDir = execSync("git rev-parse --git-dir").toString().trim();
    return path.resolve(gitDir, "hooks");
  } catch (error) {
    console.error("Erro ao determinar o diret√≥rio Git:", error.message);
    process.exit(1);
  }
};

// Conte√∫do para o hook pre-commit
const preCommitHook = `#!/bin/sh

# Hook de pre-commit para verificar conflitos e duplica√ß√µes no c√≥digo
echo "üîç Executando revis√£o de c√≥digo antes do commit..."

# Executar verifica√ß√£o de conflitos entre CSS/SASS e React
echo "‚úì Verificando conflitos entre CSS/SASS e React..."
npm run check-styles

# Verificar o resultado da verifica√ß√£o de estilos
if [ $? -ne 0 ]; then
  echo "‚ùå Foram encontrados conflitos de estilo que precisam ser corrigidos antes do commit."
  echo "   Execute 'npm run check-styles' para mais detalhes."
  echo "   Para ignorar esta verifica√ß√£o, use 'git commit --no-verify'"
  exit 1
fi

# Executar verifica√ß√£o de c√≥digo
echo "‚úì Verificando problemas no c√≥digo..."
npm run check-code

# Verificar o resultado da verifica√ß√£o de c√≥digo
if [ $? -ne 0 ]; then
  echo "‚ùå Foram encontrados problemas no c√≥digo que precisam ser corrigidos antes do commit."
  echo "   Execute 'npm run check-code' para mais detalhes."
  echo "   Para ignorar esta verifica√ß√£o, use 'git commit --no-verify'"
  exit 1
fi

# Executar a revis√£o de mudan√ßas completa
echo "‚úì Realizando revis√£o completa das mudan√ßas..."
npm run review-changes

# Verificar o resultado da revis√£o
if [ $? -ne 0 ]; then
  echo "‚ùå A revis√£o de c√≥digo encontrou problemas que precisam ser corrigidos antes do commit."
  echo "   Para ignorar esta verifica√ß√£o, use 'git commit --no-verify'"
  exit 1
fi

echo "‚úÖ Revis√£o de c√≥digo conclu√≠da com sucesso!"
exit 0
`;

// Conte√∫do para o hook post-merge (executado ap√≥s pull/merge)
const postMergeHook = `#!/bin/sh

# Hook de post-merge para verificar conflitos ap√≥s merge/pull
echo "üîç Verificando conflitos ap√≥s merge/pull..."

# Executar verifica√ß√£o di√°ria
npm run daily-check

# Mesmo se houver erros, permitir que o merge continue
echo "‚úÖ Verifica√ß√£o p√≥s-merge conclu√≠da. Relat√≥rio de conflitos dispon√≠vel em './reports/'"
exit 0
`;

// Instalar hooks
const installHooks = () => {
  try {
    console.log("Instalando hooks Git...");

    // Obter o caminho dos hooks Git
    const hooksPath = getGitHooksPath();

    // Verificar se o diret√≥rio de hooks existe
    if (!fs.existsSync(hooksPath)) {
      console.log(`Criando diret√≥rio de hooks: ${hooksPath}`);
      fs.mkdirSync(hooksPath, { recursive: true });
    }

    // Caminho para o hook pre-commit
    const preCommitPath = path.join(hooksPath, "pre-commit");

    // Escrever o hook pre-commit
    fs.writeFileSync(preCommitPath, preCommitHook);

    // Tornar o hook execut√°vel (chmod +x)
    try {
      execSync(`chmod +x "${preCommitPath}"`);
    } catch (err) {
      console.log(
        "Nota: N√£o foi poss√≠vel tornar o hook execut√°vel. Se estiver no Windows, isso √© esperado."
      );
    }

    // Caminho para o hook post-merge
    const postMergePath = path.join(hooksPath, "post-merge");

    // Escrever o hook post-merge
    fs.writeFileSync(postMergePath, postMergeHook);

    // Tornar o hook execut√°vel (chmod +x)
    try {
      execSync(`chmod +x "${postMergePath}"`);
    } catch (err) {
      console.log(
        "Nota: N√£o foi poss√≠vel tornar o hook execut√°vel. Se estiver no Windows, isso √© esperado."
      );
    }

    console.log("‚úÖ Hooks Git instalados com sucesso!");
    console.log(
      "   O hook pre-commit agora verificar√° conflitos e duplica√ß√µes no c√≥digo antes de cada commit."
    );
    console.log(
      "   O hook post-merge executar√° verifica√ß√µes ap√≥s pull/merge para identificar conflitos."
    );
  } catch (error) {
    console.error("Erro ao instalar hooks Git:", error.message);
    process.exit(1);
  }
};

// Executar instala√ß√£o
installHooks();
