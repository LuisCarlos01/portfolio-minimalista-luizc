// Estilos para transições de página
@use "../base/variables" as *;

.page-transition-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 9999;
  pointer-events: none;
  mix-blend-mode: exclusion;
  transform: translateZ(0);
  
  // Variações por seção de destino com gradientes animados
  &.to-home {
    background: radial-gradient(circle at center, rgba(155, 89, 182, 0.6), rgba(41, 128, 185, 0.3));
    backdrop-filter: blur(8px);
    -webkit-backdrop-filter: blur(8px);
  }
  
  &.to-about {
    background: radial-gradient(circle at top right, rgba(155, 89, 182, 0.6), rgba(0, 0, 0, 0.3));
    backdrop-filter: blur(8px);
    -webkit-backdrop-filter: blur(8px);
  }
  
  &.to-skills {
    background: radial-gradient(circle at bottom left, rgba(46, 204, 113, 0.4), rgba(155, 89, 182, 0.3));
    backdrop-filter: blur(8px);
    -webkit-backdrop-filter: blur(8px);
  }
  
  &.to-portfolio {
    background: radial-gradient(circle at top left, rgba(52, 152, 219, 0.4), rgba(155, 89, 182, 0.3));
    backdrop-filter: blur(8px);
    -webkit-backdrop-filter: blur(8px);
  }
  
  &.to-todo {
    background: radial-gradient(circle at center, rgba(155, 89, 182, 0.5), rgba(243, 156, 18, 0.3));
    backdrop-filter: blur(8px);
    -webkit-backdrop-filter: blur(8px);
  }
  
  &.to-contact {
    background: radial-gradient(circle at bottom right, rgba(231, 76, 60, 0.3), rgba(155, 89, 182, 0.4));
    backdrop-filter: blur(8px);
    -webkit-backdrop-filter: blur(8px);
  }
  
  &.to-resume {
    background: radial-gradient(circle at bottom, rgba(26, 188, 156, 0.4), rgba(155, 89, 182, 0.3));
    backdrop-filter: blur(8px);
    -webkit-backdrop-filter: blur(8px);
  }
  
  // Animação para as bordas do overlay
  &::before {
    content: '';
    position: absolute;
    inset: 0;
    border: 0 solid rgba(155, 89, 182, 0.7);
    opacity: 0;
    transition: border-width 0.4s ease-out, opacity 0.4s ease-out;
  }
  
  &.active {
    &::before {
      border-width: 2px;
      opacity: 1;
    }
  }
}

// Ripple effect para transição
.ripple-transition {
  position: fixed;
  z-index: 9997;
  border-radius: 50%;
  transform: translate(-50%, -50%) scale(0);
  background: rgba(155, 89, 182, 0.4);
  pointer-events: none;
  transition: transform 1s cubic-bezier(0.55, 0, 0.1, 1);
  mix-blend-mode: overlay;
  backdrop-filter: blur(4px);
  -webkit-backdrop-filter: blur(4px);
  
  &.active {
    transform: translate(-50%, -50%) scale(3);
  }
}

// Animações para elementos que aparecem durante a transição
@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeInLeft {
  from {
    opacity: 0;
    transform: translateX(-50px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes fadeInRight {
  from {
    opacity: 0;
    transform: translateX(50px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes fadeInScale {
  from {
    opacity: 0;
    transform: scale(0.9);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes glowPulse {
  0% {
    box-shadow: 0 0 5px rgba(155, 89, 182, 0.5), 
                0 0 10px rgba(155, 89, 182, 0.3);
  }
  50% {
    box-shadow: 0 0 20px rgba(155, 89, 182, 0.8), 
                0 0 40px rgba(155, 89, 182, 0.5);
  }
  100% {
    box-shadow: 0 0 5px rgba(155, 89, 182, 0.5), 
                0 0 10px rgba(155, 89, 182, 0.3);
  }
}

// Novo efeito de revelação
@keyframes revealClip {
  0% {
    clip-path: inset(0 100% 0 0);
  }
  100% {
    clip-path: inset(0 0 0 0);
  }
}

// Classes de utilidade para aplicar animações a elementos específicos
.fade-in-up {
  animation: fadeInUp 0.8s forwards;
}

.fade-in-left {
  animation: fadeInLeft 0.8s forwards;
}

.fade-in-right {
  animation: fadeInRight 0.8s forwards;
}

.fade-in-scale {
  animation: fadeInScale 0.8s forwards;
}

.reveal-clip {
  animation: revealClip 1s cubic-bezier(0.77, 0, 0.175, 1) forwards;
}

.glow-pulse {
  animation: glowPulse 2s infinite;
}

// Atrasos para elementos em sequência
@for $i from 1 through 10 {
  .delay-#{$i} {
    animation-delay: #{$i * 0.1}s;
  }
}

// Efeito de partículas para transições
.transition-particles {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  pointer-events: none;
  z-index: 9998;
  
  .particle {
    position: absolute;
    width: 6px;
    height: 6px;
    background: rgba(155, 89, 182, 0.6);
    border-radius: 50%;
    animation: particleFloat 3s infinite ease-in-out;
    
    @for $i from 1 through 20 {
      &:nth-child(#{$i}) {
        // Usar valores fixos para random em vez de funções math
        $random-x: calc(#{random(100)}* 1%);
        $random-y: calc(#{random(100)}* 1%);
        $random-opacity: calc(#{random(70) * 0.01} + 0.3);
        $random-delay: calc(#{random(300) * 0.01}s);
        $random-duration: calc(2s + #{random(200) * 0.01}s);
        $random-scale: calc(0.5 + #{random(50) * 0.01});
        $random-rotation: calc(#{random(360)}deg);
        
        left: $random-x;
        top: $random-y;
        opacity: $random-opacity;
        animation-delay: $random-delay;
        animation-duration: $random-duration;
        transform: scale($random-scale) rotate($random-rotation);
      }
    }
  }
  
  // Novas formas de partículas
  .particle-star {
    position: absolute;
    width: 0;
    height: 0;
    border-left: 8px solid transparent;
    border-right: 8px solid transparent;
    border-bottom: 16px solid rgba(155, 89, 182, 0.7);
    animation: particleSpin 4s infinite linear;
    
    &::after {
      content: '';
      position: absolute;
      top: 5px;
      left: -8px;
      width: 0;
      height: 0;
      border-left: 8px solid transparent;
      border-right: 8px solid transparent;
      border-top: 16px solid rgba(155, 89, 182, 0.7);
    }
    
    @for $i from 1 through 10 {
      &:nth-child(#{$i}) {
        // Usar valores fixos para random em vez de funções math
        $random-x: calc(#{random(100)}* 1%);
        $random-y: calc(#{random(100)}* 1%);
        $random-delay: calc(#{random(400) * 0.01}s);
        
        left: $random-x;
        top: $random-y;
        animation-delay: $random-delay;
      }
    }
  }
}

@keyframes particleFloat {
  0% {
    transform: translateY(0) translateX(0) scale(1);
    opacity: 0;
  }
  25% {
    opacity: 1;
  }
  75% {
    opacity: 1;
  }
  100% {
    transform: translateY(-40px) translateX(40px) scale(0);
    opacity: 0;
  }
}

@keyframes particleSpin {
  0% {
    transform: rotate(0deg) translateY(0);
    opacity: 0;
  }
  10% {
    opacity: 1;
  }
  90% {
    opacity: 1;
  }
  100% {
    transform: rotate(360deg) translateY(-60px);
    opacity: 0;
  }
}

// Novos efeitos para a transição entre seções
.section-transition-container {
  position: relative;
  overflow: hidden;
  
  &::before {
    content: '';
    position: absolute;
    inset: 0;
    background: linear-gradient(135deg, rgba(155, 89, 182, 0.2), transparent);
    opacity: 0;
    transition: opacity 0.5s ease;
    z-index: 0;
    pointer-events: none;
  }
  
  &.transitioning::before {
    opacity: 1;
  }
} 